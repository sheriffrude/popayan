@model EditarTarifarioSubGrupoViewModel
@{
    ViewBag.Title = "Editar";
    var ListaGrupoTarifarios = ViewBag.ListaGrupoTarifarios as IEnumerable<SelectListItem>;
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title">@ViewBag.Title</h4>
</div>

<div class="modal-body">
    @using (Html.BeginForm("EditarSubGrupo", "Tarifario",
                                                                new { Area = "Gestion" },
                                                                FormMethod.Post,
                                                                new { @class = "", role = "form", onsubmit = "onSuccessEditarTarifarioSubGrupo();" }))
    {
        @Html.ValidationMessage("Error", new { @class = "text-danger" })
        @Html.ValidationMessage("Success", new { @class = "text-success" })
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.EmpresaId)

        <div class="form-group">
            @Html.LabelFor(m => m.NombreGrupo, new { @class = "control-label" })
            @Html.DropDownListFor(m => m.NombreGrupo, ListaGrupoTarifarios, "Seleccione", new { @class = "form-control selectpicker", data_live_search="true" })
            @Html.ValidationMessageFor(m => m.NombreGrupo, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.SubNombre, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.SubNombre, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.SubNombre, "", new { @class = "text-danger" })
        </div>


        <div class="text-right">
            <button type="submit" class="btn btn-default">Guardar</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
        </div>
    }
</div>


