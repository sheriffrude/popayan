@model CrearClienteTarifarioViewModel

@{
    ViewBag.Title = "Crear";
}


<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title">Editar Tarifario</h4>
</div>


<div class="modal-body">
    @using (Ajax.BeginForm("Editar", "ClienteTarifario", new AjaxOptions { HttpMethod = "POST", OnComplete = "CreaTarifario.onComplete" }))
    {
        @Html.ValidationMessage("Error", new { @class = "text-danger" })
        @Html.ValidationMessage("Success", new { @class = "text-success" })
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.ClienteId)

        <div class="form-group">
            @Html.LabelFor(m => m.Nombre, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.GrupoTarifarioId, new { @class = "control-label" })
            @Html.DropDownListFor(m => m.GrupoTarifarioId, Model.GruposTarifarios, "Seleccione", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.GrupoTarifarioId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Tarifa, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Tarifa, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Tarifa, "", new { @class = "text-danger" })
        </div>

        <div class="text-right">
            <button type="submit" class="btn btn-success">Guardar</button>
            <button type="button" class="btn btn-warning" data-dismiss="modal">Cerrar</button>
        </div>
    }
</div>

