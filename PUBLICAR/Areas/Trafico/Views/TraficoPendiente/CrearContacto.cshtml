@model  TraficoPendienteCrearContactoViewModel
@{
    ViewBag.Title = "Crear Contacto";
    ViewBag.BodyClass = "body-background-gray";
}
@Scripts.Render("~/Areas/Gestion/scripts/ContactoPersonal/Crear.js")
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title">@ViewBag.Title</h4>
</div>

<!--Formulario-->
@using (Ajax.BeginForm("CrearContacto", "TraficoPendiente", new { Area = "Trafico" },
        new AjaxOptions
        {
            HttpMethod = "POST",
            OnBegin = "OnBeginCrearContacto",
            OnComplete = "OnSuccessCrearContacto"
        },
        new { @class = "", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.IdSolicitud)

    <div class="modal-body"> 
        <div class="clearfix"></div>
        <div class="form-group">
            @Html.LabelFor(m => m.PrimerNombre, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.PrimerNombre, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PrimerNombre, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.SegundoNombre, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.SegundoNombre, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.SegundoNombre, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.PrimerApellido, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.PrimerApellido, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PrimerApellido, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.SegundoApellido, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.SegundoApellido, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.SegundoApellido, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Cargo, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Cargo, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Cargo, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CorreoElectronico, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.CorreoElectronico, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CorreoElectronico, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Telefono, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Telefono, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Celular, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Celular, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Celular, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="modal-footer">
        <button type="submit" class="btn btn-success">Guardar</button>
        <button type="button" class="btn btn-warning" data-dismiss="modal">Cerrar</button>
    </div>
}