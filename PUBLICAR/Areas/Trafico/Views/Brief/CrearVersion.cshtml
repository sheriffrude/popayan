@model CrearVersionBriefViewModel
@{
    ViewBag.Title = "Crear nueva versión de Brief";
}

<div class="modal-header">
    <div class="row">
        <div class="col-md-10 text-left">
            <h3>@ViewBag.Title</h3>
        </div>
        <div class="col-md-2 text-right">
            <a href="@Url.Action("Listar", "Brief", new { Area = "Trafico",id = Model.OtId, idEmpresa = Model.EmpresaId} )" data-toggle="modal" data-target="#" data-size="all" data-execute-onload="OnLoadListarBrief" id="atras_listar_Brief">
                <img src="@Url.Content("~/Content/images/boton-regresar-menu.png")" alt="" />
            </a>
        </div>
    </div>
</div>
<div class="modal-body">
    @using (Ajax.BeginForm("CrearVersion", "Brief", new { Area = "Trafico" }, new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBeginFormCrearVersionBrief", OnSuccess = "OnSuccessCrearVersionBrief" },
                                                                                                                                                                new { @class = "", role = "form", id = "FormCrearVersionBrief" }))
    {
        @Html.HiddenFor(m => m.OtId)
        <div class="clearfix">
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.Codigo, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Codigo, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <div class="form-group col-md-6">
                @Html.HiddenFor(m => m.GesBriefId)
                @Html.LabelFor(m => m.Nombre, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", @readonly = "readonly"})
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.Producto, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Producto, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.DesarrolladoPor, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.DesarrolladoPor, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.FechaCreacion, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.FechaCreacion, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.FechaEntrega, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.FechaEntrega, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">Datos nueva versión</div>
                    <div class="panel-body">
                        <div class="col-md-12 padding-left-0">
                            <label class="control-label" for="Archivo">Archivo adjunto:</label>
                            <input type="file" id="uploadFile" onchange="SubirArchivoVersion(this)" />
                        </div>
                        <div class="clearfix"></div>
                        <div class="col-md-6  padding-left-0">
                            @Html.LabelFor(m => m.FechaActualizacion, new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.FechaActualizacion, new { @class = "form-control" })
                        </div>
                        <div class="col-md-12  padding-left-0">
                            @Html.LabelFor(m => m.Observacion, new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.Observacion, new { @class = "form-control", maxlength = "300" })
                        </div>
                    </div>
                </div>
            </div>

            @*<div>
                <div class="col-md-6" id="dvCrearTarea">
                    <input type="button" class="btn btn-default" onclick="CrearTarea()" value="CREAR TAREA">
                </div>
                <div class="clearfix"></div>
                <br />

                <div id="crearTarea" style="display:none">
                    @Html.HiddenFor(m => m.existeTarea)
                    <div class="panel panel-default">
                        <div class="panel-heading">Tarea</div>
                        <div class="panel-body">
                            <div class="col-md-6  padding-left-0">
                                @Html.LabelFor(m => m.DeptoId, new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.DeptoId, Model.ListaDepto, "Seleccione", new { @class = "form-control", onchange = "OnchangeDeptoVBrief(this)" })
                                @Html.ValidationMessageFor(m => m.DeptoId, "", new { @class = "text-danger" })
                            </div>
                            <div class="clearfix"></div>
                            <br />
                            <div class="col-md-6  padding-left-0">
                                <span>Responsable(s) del Departamento:</span>
                                <table id="tabla-Directores-VBrief" class="table table-striped table-bordered compact text-center" cellpadding="0" width="100%">
                                    <thead>
                                        <tr>
                                            <th class="text-center"></th>
                                            <th class="text-center">Nombre</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>

                            <div class="col-md-6 padding-left-0">
                                <span>Seleccione Por lo menos un Asignado:</span>
                                <table id="tabla-Ejecutivos-VBrief" class="table table-striped table-bordered compact text-center" cellpadding="0" width="100%">
                                    <thead>
                                        <tr>
                                            <th class="text-center"></th>
                                            <th class="text-center">Nombre</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>

                            <div class="clearfix"></div>
                            <div class="col-md-3  padding-left-0">
                                @Html.LabelFor(m => m.Fecha, new { @class = "control-label" })
                                @Html.TextBoxFor(m => m.Fecha, new { @class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.Fecha, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3  padding-left-0">
                                @Html.LabelFor(m => m.Hora, new { @class = "control-label" })
                                <div class="input-group bootstrap-timepicker timepicker">
                                    @Html.TextBoxFor(m => m.Hora, new { @class = "form-control input-small" })
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                                </div>
                                @Html.ValidationMessageFor(m => m.Hora, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6  padding-left-0">
                                @Html.LabelFor(m => m.TareaId, new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.TareaId, Model.ListaTareas, "Seleccione", new { @class = "form-control", onchange = "OnChangeTareaId(this)" })
                                @Html.ValidationMessageFor(m => m.TareaId, "", new { @class = "text-danger" })
                            </div>
                            <div class="clearfix"></div>
                            <br />
                            <div class="col-md-6  padding-left-0">
                                @Html.LabelFor(m => m.Titulo, new { @class = "control-label" })
                                @Html.TextBoxFor(m => m.Titulo, "Seleccione", new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Titulo, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 hidden" id="MostrasPresupuesto">
                                <span>Seleccione Por lo menos un Asignado:</span>
                                <table id="tabla-Presupuestos" class="table table-striped table-bordered compact text-center" cellpadding="0" width="100%">
                                    <thead>
                                        <tr>
                                            <th class="text-center"></th>
                                            <th class="text-center">Nombre</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>

                            </div>
                            <div class="clearfix"></div>
                            <br />
                            <div class="col-md-12  padding-left-0">
                                @Html.LabelFor(m => m.Descripcion, new { @class = "control-label" })
                                @Html.TextAreaFor(m => m.Descripcion, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Descripcion, "", new { @class = "text-danger" })
                            </div>
                            <div class="clearfix"></div>
                            <div class="col-md-12 " id="file">
                                <input type="file" id="uploadFile" onchange="SubirArchivoCrearVersionBrief(this)" />
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                </div>
            </div>*@
            @if (Model.ListaPreguntasRespuesta.Count > 0)
            {
                for (var i = 0; i < Model.ListaPreguntasRespuesta.Count; i++)
                {
                    if (Model.ListaPreguntasRespuesta[i].TipoPregunta == "ABIERTA")
                    {
                        var brief = Model.ListaPreguntasRespuesta[i].BriefId;
                        var pregunta = Model.ListaPreguntasRespuesta[i].Pregunta;
                        var preguntaId = Model.ListaPreguntasRespuesta[i].IdPregunta;
                        var respuesta = Model.ListaPreguntasRespuesta[i].Respuesta;

                        <div class="form-group col-md-6">
                            <input type="text" class="hidden" id="BriefId" value="@brief">
                            <div class="form-group">
                                <label data-toggle="tooltip" for="comment">@pregunta</label>
                                <textarea data-pregunta-id="@preguntaId" class="form-control" rows="3">@respuesta</textarea>
                            </div>
                        </div>
                    }
                    if (Model.ListaPreguntasRespuesta[i].TipoPregunta == "RESPUESTA UNICA")
                    {
                        var brief = Model.ListaPreguntasRespuesta[i].BriefId;
                        var pregunta = Model.ListaPreguntasRespuesta[i].Pregunta;
                        var preguntaId = Model.ListaPreguntasRespuesta[i].IdPregunta;
                        var opciones = Model.ListaPreguntasRespuesta[i].Opciones;
                        var respuesta = Model.ListaPreguntasRespuesta[i].Respuesta;
                        var opcioneSplit = opciones.Split(',');
                        <div class="form-group col-md-6">
                            <input type="text" class="hidden" id="BriefId" value="@brief">
                            <div class="form-group">
                                <label data-toggle="tooltip" for="comment">@pregunta</label>
                                @for (var x = 0; x < opcioneSplit.Length; x++)
                                {
                                    string ck = "";

                                    var s = opcioneSplit[x].Replace('"', ' ').Replace("[", "").Replace("]", "").Trim();
                                    if(s == respuesta)
                                    {
                                        ck = "checked";
                                    }
                                    else
                                    {
                                        ck = "";
                                    }
                                    <div class="radio"><label><input type="radio" name="optradio" data-pregunta-id="@preguntaId" value="@s" @ck>@s</label></div>
                                }
                            </div>
                        </div>
                    }
                    if (Model.ListaPreguntasRespuesta[i].TipoPregunta == "RESPUESTA MULTIPLE")
                    {
                        var brief = Model.ListaPreguntasRespuesta[i].BriefId;
                        var pregunta = Model.ListaPreguntasRespuesta[i].Pregunta;
                        var preguntaId = Model.ListaPreguntasRespuesta[i].IdPregunta;
                        var opciones = Model.ListaPreguntasRespuesta[i].Opciones;
                        var respuesta = Model.ListaPreguntasRespuesta[i].Respuesta;
                        var opcioneSplit = opciones.Split(',');

                        <div class="form-group col-md-6">
                            <input type="text" class="hidden" id="BriefId" value="@brief">
                            <div class="form-group">
                                <label data-toggle="tooltip" for="comment">@pregunta</label>
                                @for (var x = 0; x < opcioneSplit.Length; x++)
                                {
                                    string ck = "";
                                    var s = opcioneSplit[x].Replace('"', ' ').Replace("[", "").Replace("]", "").Trim();
                                    if (s == respuesta)
                                    {
                                        ck = "checked";
                                    }
                                    else
                                    {
                                        ck = "";
                                    }
                                    <div class="checkbox"><label><input type="checkbox" data-pregunta-id="@preguntaId" value="@s" @ck>@s</label></div>
                                }
                            </div>
                        </div>
                    }
                    <div class="clearfix"></div>
                }
            }

        </div>
    }
    <div class="text-right">
        <input type="button" class="btn btn-trafico" onclick="GuardarPreguntasVersion()" value="CREAR BRIEF">
        <a href="@Url.Action("Listar", "Brief", new { Area = "Trafico",id = Model.OtId, idEmpresa = Model.EmpresaId} )" data-toggle="modal" data-target="#" data-size="all" data-execute-onload="OnLoadListarBrief" id="atras_listar_Brief" class="btn btn-warning">Cerrar</a>
    </div>
</div>
