@model EditarTipoSalarioMinimoViewModel
@{
    ViewBag.Title = "Editar salario mínimo";
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title">@ViewBag.Title</h4>
</div>

<div class="modal-body">
    @using (Ajax.BeginForm("Editar", "TipoSalarioMinimo", new { Area = "Parametrizacion" },
        new AjaxOptions
        {
            HttpMethod = "POST",
            OnBegin = "OnBeginEditarTipoSalarioMinimo",
            OnComplete = "OnCompleteEditarTipoSalarioMinimo"
        },
        new { @class = "", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="clearfix"></div>
        @Html.ValidationMessage("Error", new { @class = "text-danger" })
        @Html.ValidationMessage("Success", new { @class = "text-success" })
        @Html.ValidationSummary(false, "", new { @class = "alert alert-danger small col-md-12" })
        <div class="clearfix"></div>

        @Html.HiddenFor(m => m.Id)
        <div class="form-group">
            @Html.LabelFor(m => m.Ano, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Ano, "{0:yyyy}", new { placeholder = "YYYY", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Ano, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Valor, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Valor, new { placeholder = "000000", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Valor, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Estado, new { @class = "control-label" })
            <div class="radio">
                <label>
                    @Html.RadioButtonFor(m => m.Estado, false)
                    Inactivar
                </label>
            </div>
            <div class="radio">
                <label>
                    @Html.RadioButtonFor(m => m.Estado, true)
                    Activar
                </label>
            </div>
            @Html.ValidationMessageFor(m => m.Estado, "", new { @class = "text-danger" })
        </div>

        <div class="text-right">
            <button type="submit" class="btn btn-success">Guardar</button>
            <button type="button" class="btn btn-warning" data-dismiss="modal">Cerrar</button>
        </div>
    }
</div>

<script>
    $(function () {
        $('#Ano').datepicker({
            changeMonth: false,
            changeYear: true,
            yearRange: '1900:2100',
            showButtonPanel: true,
            dateFormat: 'yy',
            onClose: function (dateText, inst) {
                $(this).datepicker('setDate', new Date(inst.selectedYear, 1, 1));
            }
        });
        $("#Ano").datepicker().focus(function () { $(".ui-datepicker-month").hide(); });
        $("#Ano").datepicker().focus(function () { $(".ui-datepicker-calendar").hide(); });
    });
</script>