@model CrearEmpresaBancoProductoViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title">Nuevo Producto</h4>
</div>


<div class="modal-body">
    @using (Html.BeginForm("Crear", "EmpresaBancoProducto",
                new { Area = "Gestion" },
                FormMethod.Post,
                new { @class = "", role = "form", onsubmit = "onSuccessCrearProducto();" }))
    {
        @Html.ValidationMessage("Error", new { @class = "text-danger" })
        @Html.ValidationMessage("Success", new { @class = "text-success" })
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        @Html.HiddenFor(m => m.EmpresaId)
        @Html.HiddenFor(m => m.BancoId)
        <div class="form-group">
            @Html.LabelFor(m => m.NumeroCuenta, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.NumeroCuenta, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.NumeroCuenta, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Nombre, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.TipoId, new { @class = "control-label" })
            @Html.DropDownListFor(m => m.TipoId, Model.ListaTipos, "Seleccione", new { @class = "form-control selectpicker", data_live_search="true" })
            @Html.ValidationMessageFor(m => m.TipoId, "", new { @class = "text-danger" })
        </div>

        <div class="text-right">
            <button type="submit" class="btn btn-default">Guardar</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
        </div>
    }
</div>