@model  EditarPreguntaBriefViewModel
@{
    ViewBag.Title = "Editar pregunta";
    var listaTiposPreguntas = ViewBag.ListaTiposPreguntas as IEnumerable<SelectListItem>;
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title">@ViewBag.Title</h4>
</div>

<div class="modal-body">
    <!--Formulario-->
    @using (Ajax.BeginForm("EditarPregunta", "Brief", new { Area = "Gestion" },
        new AjaxOptions
        {
            HttpMethod = "POST",
            OnBegin = "OnBeginEditarPregunta",
            OnComplete = "OnCompleteEditarPregunta"
        },
        new { @class = "", role = "form" })
        )
    {
        @Html.AntiForgeryToken()
        
        <div class="clearfix"></div>
        @Html.ValidationMessage("Error", new { @class = "text-danger" })
        @Html.ValidationMessage("Success", new { @class = "text-success" })
        @Html.ValidationSummary(false, "", new { @class = "alert alert-danger small col-md-12" })
        <div class="clearfix"></div>

        @Html.HiddenFor(m => m.PreguntaId)

        <div class="form-group">
            @Html.LabelFor(m => m.Pregunta, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Pregunta, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(m => m.Pregunta, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Descripcion, new { @class = "control-label" })
            @Html.TextAreaFor(m => m.Descripcion, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(m => m.Descripcion, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.TipoPregunta, new { @class = "control-label" })
            @Html.DropDownListFor(m => m.TipoPregunta, Model.ListaTiposPreguntas, "Seleccione", new { @class = "form-control", required = "required", onchange = "OnChangeTipoPreguntaEditar(this);" })
            @Html.ValidationMessageFor(m => m.TipoPregunta, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Obligatorio, new { @class = "control-label" })
            @Html.CheckBoxFor(m => m.Obligatorio, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Obligatorio, "", new { @class = "text-danger" })
        </div>

        <div class="clearfix"></div>
        
        <!--Contenedor de opciones-->
        <div id="contenedor-opciones">
            <hr />
            <label class="control-label">Opciones (*)</label>
            <div class="input-group">
                @Html.TextBoxFor(m => m.Opcion, new { @class = "form-control" })
                <span class="input-group-btn">
                    <button type="button" onclick="AdicionarOpcionEditar()" class="btn btn-secondary">ADICIONAR</button>
                </span>
            </div>
            
            <table id="tabla-opciones" class="table table-striped table-bordered compact text-center" cellpadding="0" width="100%">
                <thead>
                    <tr>
                        <th class="text-center">Opciones</th>
                        <th class="text-center"></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ListaOpciones != null)
                    {
                        foreach (var item in Model.ListaOpciones)
                        {
                            <tr>
                                <td>@item</td>
                                <td></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

        <hr />

        <div class="text-right">
            <input type="submit" class="btn btn-success" value="Guardar" />
            <button type="button" class="btn btn-warning" data-dismiss="modal">Cerrar</button>
        </div>
    }
</div>